Problem 2
On every CodeChef user's profile page, the list of problems that they have set, tested, and written editorials for, is listed at the bottom.
Given the number of problems in each of these 33 categories as X,Y, and Z respectively (where all three integers are distinct), find if the user has been most active as a Setter, Tester, or Editorialist.

Input Format
The first line of input will contain a single integer T, denoting the number of test cases.
Each test case consists of three space-separated integers X,Y, and Z - the number of problems they have set, tested, and written editorials for.

Output Format
For each test case, output in a new line:

Setter, if the user has been most active as a setter.
Tester, if the user has been most active as a tester.
Editorialist, if the user has been most active as an editorialist.

Constraints

•	1 ≤ T ≤ 10000
•	1≤X, Y, Z ≤ 100, Where
X, Y, and Z are distinct.

Sample 1:
Input         Output
4             Setter
5 3 2         Editorialist
1 2 4         Tester
2 5 1         Setter
9 4 5

Explanation:
Test case 1: The number of problems that the user has set is greater than the number of problems tested or written editorials for. Thus, the user is most active as setter.
Test case 2: The number of problems that the user has written editorials for, is greater than the number of problems set or tested. Thus, the user is most active as editorialist.
Test case 3: The number of problems that the user has tested is greater than the number of problems set or written editorials for. Thus, the user is most active as tester.
Test case 4: The number of problems that the user has set is greater than the number of problems tested or written editorials for. Thus, the user is most active as setter.


Solution:
C++17
#include <iostream>
using namespace std;

int main() {
	int t; cin>>t; while(t--){
	    int X,Y,Z;
	    cin>>X>>Y>>Z;
	    if(X>Y and X>Z){
	        cout<<"Setter"<<endl;
	    }else if(Y>X and Y>Z){
	        cout<<"Tester"<<endl;
	    }else{
	        cout<<"Editorialist"<<endl;
	    }
	}
	return 0;
}




